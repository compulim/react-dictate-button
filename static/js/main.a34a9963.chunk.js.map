{"version":3,"sources":["../../../src/Context.js","../../../src/useRefFrom.js","../../../src/vendorPrefix.js","../../../src/Composer.js","../../../src/usePrevious.js","../../../../../src/hooks/internal/useDictateContext.js","../../../../src/hooks/useReadyState.js","../../../../src/hooks/useSupported.js","../../../src/DictateButton.js","../../../src/DictateCheckbox.js","../../../src/index.js","useRefFrom.js","DictationTextbox.js","App.js","reportWebVitals.js","index.js"],"names":["createContext","abortable","readyState","supported","useRefFrom","value","ref","useRef","vendorPrefix","name","window","applyAll","fns","fn","recognitionAbortable","recognition","Composer","children","extra","grammar","lang","onDictate","onError","onProgress","onRawEvent","speechGrammarList","speechRecognition","started","useState","setReadyState","emitDictateOnEndRef","extraRef","grammarRef","langRef","notAllowedRef","onDictateRef","onErrorRef","onProgressRef","onRawEventRef","prevSpeechRecognition","useEffect","usePrevious","recognitionRef","speechGrammarListRef","speechRecognitionRef","handleAudioEnd","useCallback","target","handleAudioStart","type","handleEnd","handleError","event","handleRawEvent","handleResult","rawResults","results","alts","firstAlt","confidence","transcript","result","handleStart","Error","grammars","key","context","useMemo","navigator","undefined","PropTypes","any","useDictateContext","useContext","useReadyState","useSupported","DictateButtonCore","className","disabled","onClick","isRequired","DictateButton","setStarted","onClickRef","handleClick","handleDictate","DictateCheckboxCore","onChange","checked","DictateCheckbox","handleChange","current","DictationTextBoxCore","buttonClassName","interim","listening","listeningText","startText","stopText","textboxClassName","Context","placeholder","readOnly","defaultProps","DictationTextbox","setInterim","setListening","onChangeRef","console","log","handleProgress","map","trim","join","App","customValue","setCustomValue","setResult","handleCustomChange","index","style","opacity","Math","ceil","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAQA,EANgBA,wBAAc,CAC5BC,WAD4B,EAE5BC,WAF4B,EAG5BC,WAAW,ICHE,SAASC,EAAWC,GACjC,IAAMC,EAAMC,mBAIZ,OAFAD,YAEA,ECPa,SAASE,EAAaC,GACnC,wBAAWC,OACT,MAAO,qBAAOA,OAAP,GAAsCA,OAAtC,GAAqDA,OAAO,SAAD,OAAlE,ICQJ,SAASC,IAAiB,2BAALC,EAAK,yBAALA,EAAK,gBACxB,OAAO,WAAY,uBAEjB,IAAAA,GAAA,KAAAA,GAAY,SAAAC,GAAE,OAAIA,UAAJ,OAIlB,SAASC,EAAqBC,GAC5B,SAAUA,GAAV,oBAAgCA,EAAP,OAG3B,IAAMC,EAAW,SAAC,GAYZ,IAXJC,EAWI,EAXJA,SACAC,EAUI,EAVJA,MACAC,EASI,EATJA,QACAC,EAQI,EARJA,KACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,QAEA,EAAoCC,mBAApC,cAAO1B,EAAP,KAAmB2B,EAAnB,KACMC,EAAsBvB,kBAA5B,GACMwB,EAAW3B,EAAjB,GACM4B,EAAa5B,EAAnB,GACM6B,EAAU7B,EAAhB,GACM8B,EAAgB3B,kBAAtB,GACM4B,EAAe/B,EAArB,GACMgC,EAAahC,EAAnB,GACMiC,EAAgBjC,EAAtB,GACMkC,EAAgBlC,EAAtB,GACMmC,EC1CO,SAAqBlC,GAClC,IAAMC,EAAMC,mBAMZ,OAJAiC,qBAAU,WACRlC,eAGKA,EAAP,QDmC8BmC,CAA9B,GACMC,EAAiBnC,mBACjBoC,EAAuBvC,EAA7B,GACMwC,EAAuBxC,EAdzB,GAiBAmC,IAAJ,IACEL,cAGF,IAAMW,EAAiBC,uBACrB,8BAA2BJ,EAAXK,SAAqClB,EAArD,KACA,CAACa,EAFH,IAKMM,EAAmBF,uBACvB,YAAgB,IAAbC,EAAa,EAAbA,OACGA,IAAWL,EAAf,UAIAb,EALc,GASdC,aACAO,WAAyBA,EAAA,QAAsB,CAAEpC,UAAWa,EAAb,GAA2CmC,KAAM,gBAElG,CAACnB,EAAqBO,EAAeK,EAbvC,IAgBMQ,EAAYJ,uBAChB,YAAgB,EAAbC,SACcL,EAAf,UAIAA,iBAEAb,KAEAC,WAA+BK,EAA/BL,SAAuDK,EAAA,QAAqB,CAAEc,KAAM,eAEtF,CAACnB,EAAqBK,EAAcO,EAZtC,IAeMS,EAAcL,uBAClB,SAAAM,GACMA,WAAiBV,EAArB,UAKAZ,aACAY,iBAEA,gBAAIU,UACFlB,cAGFL,KAEAO,WAAsBA,UAAtBA,MAEF,CAACN,EAAqBM,EAAYF,EAAeQ,EAlBnD,IAqBMW,EAAiBP,uBACrB,SAAAM,GACMA,WAAiBV,EAArB,SAIAJ,WAAyBA,UAAzBA,KAEF,CAACA,EARH,IAWMgB,EAAeR,uBACnB,YAAqC,IAAzBS,EAAyB,EAAlCC,QAAqBT,EAAa,EAAbA,OACtB,GAAIA,IAAWL,EAAf,SAIIa,EAAJ,OAAuB,CACrB,IAAMC,EAAU,gBAAwB,SAAAC,GAGtC,IAAMC,EAAWD,EAAjB,GAEA,MAAO,CACLE,WAAYD,EADP,WAELE,WAAYF,EAASE,eAMXL,EAAd,GAEA,SACEzB,aACAK,WAAwBA,EAAA,QAAqB,CAAE0B,OAAQL,EAAV,GAAsBP,KAAM,aAEzEZ,WACEA,EAAA,QAAsB,CAAEpC,UAAWa,EAAb,GAA2C0C,QAA3C,EAAoDP,KAAM,gBAIxF,CAACnB,EAAqBK,EAAcE,EA/BtC,IAkCMyB,EAAchB,uBAClB,8BAA2BJ,EAAXK,SAAqClB,EAArD,KACA,CAACa,EAFH,IAKAF,qBAAU,WACR,KAAa,OACX,IAAKI,EAAD,SAAiCV,EAArC,QACE,MAAM,IAAI6B,MAAV,uCAGF,IAAMC,EAAWrB,WAAgCX,EAAhCW,SAAsD,IAAIA,EAA3E,QACM5B,EAAe2B,UAAyB,IAAIE,EAAlD,QAEA,IACEoB,gBAAuBhC,EAAvBgC,WAEAjD,cAGFA,OAAmBkB,EAAnBlB,QACAA,oBACAA,aAAyBJ,EAASkC,EAAlC9B,GACAA,eAA2BJ,EAASqC,EAApCjC,GACAA,QAAoBJ,EAASuC,EAA7BnC,GACAA,UAAsBJ,EAASwC,EAA/BpC,GACAA,cACAA,WAAuBJ,EAAS2C,EAAhCvC,GACAA,eACAA,iBACAA,gBACAA,kBACAA,UAAsBJ,EAASmD,EAA/B/C,GAEA,IAAiBG,EAAUa,EAA3B,QAEAb,GACE,sBAA8B,YAAkB,eAAhB+C,EAAgB,KAAX5D,EAAW,KAC1C4D,iCAAyBA,GAA7B,cAAoDA,IAClDlD,WAINA,UAGF,OAAO,WACL,IAAiBA,EAAgB2B,EAAjC,QAEA,KAAiB,CACf,IAAI5B,EAAJ,GAGE,MAAM,IAAIiD,MAAV,qFAFAhD,cAML,CAAC,EAAD,0BApDHyB,IAsEA,IAAMvC,EAAYa,EAAqB4B,EAArB5B,UAAlB,IAAkEZ,EAC5DC,IAAY,IAAwB+B,EAA1C,QAEMgC,EAAUC,mBACd,iBAAO,CACLlE,UADK,EAELC,WAFK,EAGLC,eAEF,CAACF,EAAWC,EANd,IASA,OACE,kBAAC,EAAD,UAAkBG,MAAO6D,GACvB,kBAAC,EAAD,eAAmB,SAAAA,GAAO,MAAyB,oBAAbjD,EAA0BA,EAAjC,GAAL,OAKhCD,eAAwB,CACtBC,cADsB,EAEtBC,WAFsB,EAGtBC,aAHsB,EAItBC,UAJsB,EAKtBC,eALsB,EAMtBC,aANsB,EAOtBC,gBAPsB,EAQtBC,gBARsB,EAStBC,kBAAmB2C,wBAA0BA,uBAA1BA,cAAiE5D,EAT9D,qBAUtBkB,kBAAmB0C,wBAA0BA,uBAA1BA,cAAiE5D,EAV9D,qBAWtBmB,aAAS0C,GAGXrD,YAAqB,CACnBC,SAAUqD,IADS,IAEnBpD,MAAOoD,IAFY,IAGnBnD,QAASmD,IAHU,OAInBlD,KAAMkD,IAJa,OAKnBjD,UAAWiD,IALQ,KAMnBhD,QAASgD,IANU,KAOnB/C,WAAY+C,IAPO,KAQnB9C,WAAY8C,IARO,KASnB7C,kBAAmB6C,IATA,IAUnB5C,kBAAmB4C,IAVA,IAWnB3C,QAAS2C,IAAUC,KAGrB,QElRe,SAASC,IACtB,OAAOC,qBAAP,GCHa,SAASC,IAGtB,MAAO,CAFgBF,IAAvB,YCDa,SAASG,IAGtB,MAAO,CAFeH,IAAtB,WCOF,IAAMI,EAAoB,SAAC,GAA+C,IAA7C3D,EAA6C,EAA7CA,SAAU4D,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC1D,EAAqBL,IAAdxE,EAAP,YACA,EAAoByE,IAAbxE,EAAP,YAEA,OACE,4BACE0E,UADF,EAEEC,SAAU5E,WAAoBA,IAApBA,GAFZ,EAGE6E,QAHF,EAIE9B,KAAK,UAEgB,oBAAbhC,EAA0BA,EAAS,CAAEf,eAPjD,IAYF0E,eAAiC,CAC/B3D,cAD+B,EAE/B4D,eAF+B,EAG/BC,cAAUT,GAGZO,YAA8B,CAC5B3D,SAAUqD,IADkB,IAE5BO,UAAWP,IAFiB,OAG5BQ,SAAUR,IAHkB,KAI5BS,QAAST,SAAeU,YAG1B,IAAMC,EAAgB,SAAC,GAcjB,IAbJhE,EAaI,EAbJA,SACA4D,EAYI,EAZJA,UACAC,EAWI,EAXJA,SACA5D,EAUI,EAVJA,MACAC,EASI,EATJA,QACAC,EAQI,EARJA,KACA2D,EAOI,EAPJA,QACA1D,EAMI,EANJA,UACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,kBAEA,EAA8BE,qBAA9B,WAAOD,EAAP,KAAgBuD,EAAhB,KACMC,EAAa/E,EAAnB,GACM+B,EAAe/B,EAArB,GACMgC,EAAahC,EAAnB,GAEMgF,EAActC,uBAClB,SAAAM,GACE+B,WAAsBA,UAAtBA,IAEC/B,EAAD,sBAA+B8B,GAAW,SAAAvD,GAAO,cAEnD,CAACwD,EANH,IASME,EAAgBvC,uBACpB,SAAAM,GACE8B,MAEA/C,WAAwBA,UAAxBA,KAEF,CAACA,EANH,IASMgB,EAAcL,uBAClB,SAAAM,GACE8B,MAEA9C,WAAsBA,UAAtBA,KAEF,CAACA,EANH,IASA,OACE,qBACElB,MADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,QAASA,IAAYmD,GAErB,qBAAmBD,UAAnB,EAAyCC,SAAzC,EAA6DC,QAASK,GAb1E,KAoBFH,eAA6B,CAC3BhE,cAD2B,EAE3B4D,eAF2B,EAG3BC,cAH2B,EAI3B5D,WAJ2B,EAK3BC,aAL2B,EAM3BC,UAN2B,EAO3B2D,aAP2B,EAQ3B1D,eAR2B,EAS3BC,aAT2B,EAU3BC,gBAV2B,EAW3BC,gBAX2B,EAY3BC,uBAZ2B,EAa3BC,uBAAmB2C,GAGrBY,YAA0B,CACxBhE,SAAUqD,IADc,IAExBO,UAAWP,IAFa,OAGxBQ,SAAUR,IAHc,KAIxBpD,MAAOoD,IAJiB,IAKxBnD,QAASmD,IALe,OAMxBlD,KAAMkD,IANkB,OAOxBS,QAAST,IAPe,KAQxBjD,UAAWiD,IARa,KASxBhD,QAASgD,IATe,KAUxB/C,WAAY+C,IAVY,KAWxB9C,WAAY8C,IAXY,KAYxB7C,kBAAmB6C,IAZK,IAaxB5C,kBAAmB4C,IAAUC,KAG/B,QCjIMe,EAAsB,SAAC,GAAyD,IAAvDrE,EAAuD,EAAvDA,SAAU4D,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,SAAUS,EAAwB,EAAxBA,SAAU5D,EAAc,EAAdA,QACtE,EAAqB+C,IAAdxE,EAAP,YACA,EAAoByE,IAAbxE,EAAP,YAEA,OACE,+BACE,2BACEqF,QADF,EAEEX,UAFF,EAGEC,SAAU5E,WAAoBA,IAApBA,GAHZ,EAIEqF,SAJF,EAKEtC,KAAK,aAEc,oBAAbhC,EAA0BA,EAAS,CAAEf,eATjD,IAcFoF,eAAmC,CACjCrE,cADiC,EAEjC4D,eAFiC,EAGjCC,cAAUT,GAGZiB,YAAgC,CAC9BrE,SAAUqD,IADoB,IAE9BO,UAAWP,IAFmB,OAG9BQ,SAAUR,IAHoB,KAI9BiB,SAAUjB,SAJoB,WAK9B3C,QAAS2C,SAAeU,YAG1B,IAAMS,EAAkB,SAAC,GAanB,IAZJxE,EAYI,EAZJA,SACA4D,EAWI,EAXJA,UACAC,EAUI,EAVJA,SACA5D,EASI,EATJA,MACAC,EAQI,EARJA,QACAC,EAOI,EAPJA,KACAC,EAMI,EANJA,UACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,kBAEA,EAA8BE,oBAA9B,cAAOD,EAAP,KAAgBuD,EAAhB,KAEMQ,EAAe5C,uBACnB,YAA6B,IAAhB0C,EAAgB,EAA1BzC,OAAUyC,QACXN,OAEF,CAJF,IAOMG,EAAgBvC,uBACpB,SAAAM,GACE8B,MAEA7D,GAAaA,EAAbA,KAEF,CAACA,EANH,IASM8B,EAAcL,uBAClB,SAAAM,GACE8B,MACA5D,GAAWA,EAAXA,KAEF,CAACA,EALH,IAQA,OACE,qBACEJ,MADF,EAEEC,QAFF,EAGEC,KAHF,EAIEC,UAJF,EAKEC,QALF,EAMEC,WANF,EAOEC,WAPF,EAQEC,kBARF,EASEC,kBATF,EAUEC,QAASA,IAAYmD,GAErB,qBAAqBD,UAArB,EAA2CC,SAA3C,EAA+DS,SAA/D,EAAuF5D,QAASA,GAbpG,KAoBF8D,eAA+B,CAC7BxE,cAD6B,EAE7B4D,eAF6B,EAG7BC,cAH6B,EAI7B5D,WAJ6B,EAK7BC,aAL6B,EAM7BC,UAN6B,EAO7BC,eAP6B,EAQ7BC,aAR6B,EAS7BC,gBAT6B,EAU7BC,gBAV6B,EAW7BC,uBAX6B,EAY7BC,uBAAmB2C,GAGrBoB,YAA4B,CAC1BxE,SAAUqD,IADgB,IAE1BO,UAAWP,IAFe,OAG1BQ,SAAUR,IAHgB,KAI1BpD,MAAOoD,IAJmB,IAK1BnD,QAASmD,IALiB,OAM1BlD,KAAMkD,IANoB,OAO1BjD,UAAWiD,IAPe,KAQ1BhD,QAASgD,IARiB,KAS1B/C,WAAY+C,IATc,KAU1B9C,WAAY8C,IAVc,KAW1B7C,kBAAmB6C,IAXO,IAY1B5C,kBAAmB4C,IAAUC,KAG/B,QC3HA,QCNe,SAASnE,EAAWC,GACjC,IAAMC,EAAMC,mBAIZ,OAFAD,EAAIqF,QAAUtF,EAEPC,ECDT,IAAMsF,EAAuB,SAAC,GAcvB,IAbLC,EAaI,EAbJA,gBACAhB,EAYI,EAZJA,UACAC,EAWI,EAXJA,SACAgB,EAUI,EAVJA,QACAC,EASI,EATJA,UACAC,EAQI,EARJA,cACAT,EAOI,EAPJA,SACAR,EAMI,EANJA,QACApD,EAKI,EALJA,QACAsE,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,iBACA9F,EACI,EADJA,MAEA,EAAkCoE,qBAAW2B,GAArClG,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,UAEpB,OACE,yBAAK0E,UAAWA,GACd,4BACEA,UAAWgB,EACXf,SAAyB,IAAf5E,GAAmC,IAAfA,IAAqBC,GAAa2E,EAChEC,QAASA,GAER7E,EAAa,EAAIgG,EAAWD,GAE/B,2BACEpB,UAAWsB,EACXZ,SAAUA,EACVc,YAAa1E,GAAWoE,EAAYD,GAAWE,EAAgB,GAC/DM,SAAyB,IAAfpG,EACV+C,KAAK,OACL5C,OAASsB,GAAWtB,GAAU,OAMtCuF,EAAqBW,aAAe,CAClCV,qBAAiBxB,EACjBQ,eAAWR,EACXS,cAAUT,EACVyB,aAASzB,EACT2B,mBAAe3B,EACf4B,eAAW5B,EACX6B,cAAU7B,EACV8B,sBAAkB9B,EAClBhE,WAAOgE,GAmBT,IAAMmC,EAAmB,SAAC,GAenB,IAdLX,EAcI,EAdJA,gBACAhB,EAaI,EAbJA,UACAC,EAYI,EAZJA,SACA3D,EAWI,EAXJA,QACAC,EAUI,EAVJA,KACA4E,EASI,EATJA,cACAT,EAQI,EARJA,SACAjE,EAOI,EAPJA,QACAG,EAMI,EANJA,kBACAC,EAKI,EALJA,kBACAuE,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,iBACA9F,EACI,EADJA,MAEA,EAA8BuB,mBAAS,IAAvC,mBAAOkE,EAAP,KAAgBW,EAAhB,KACA,EAAkC7E,oBAAS,GAA3C,mBAAOmE,EAAP,KAAkBW,EAAlB,KACA,EAA8B9E,oBAAS,GAAvC,mBAAOD,EAAP,KAAgBuD,EAAhB,KACMyB,EAAcvG,EAAWmF,GACzBnD,EAAahC,EAAWkB,GAExBoE,EAAe5C,uBACnB,gBAAazC,EAAb,EAAG0C,OAAU1C,MAAb,OAA2BsG,EAAYhB,SAAWgB,EAAYhB,QAAQ,CAAEtF,YACxE,CAACsG,IAGGvB,EAActC,uBAAY,kBAAMoC,GAAW,SAAAvD,GAAO,OAAKA,OAAU,CAACuD,IAElEG,EAAgBvC,uBACpB,YAAiB,IACKzC,GADN,EAAbwD,QACuC,IAAhCD,WAER6C,OAAWpC,GACXqC,GAAa,GACbxB,GAAW,GAEXyB,EAAYhB,SAAWgB,EAAYhB,QAAQ,CAAEtF,YAE/C,CAACsG,EAAaF,EAAYC,EAAcxB,IAGpC/B,EAAcL,uBAClB,SAAAM,GACEwD,QAAQC,IAAI,QAASzD,GAErBqD,OAAWpC,GACXqC,GAAa,GACbxB,GAAW,GAEX9C,EAAWuD,SAAWvD,EAAWuD,QAAQvC,KAE3C,CAAChB,EAAYqE,EAAYC,EAAcxB,IAGnC4B,EAAiBhE,uBACrB,YAAkB,IAAfU,EAAc,EAAdA,QACDiD,GAAYjD,GAAW,IAAIuD,KAAI,SAAAlD,GAAM,OAAIA,EAAOD,WAAWoD,UAAQC,KAAK,MACxEP,GAAa,KAEf,CAACD,EAAYC,IAGf,OACE,kBAAC,EAAD,CACEvF,QAASA,EACTC,KAAMA,EACNC,UAAWgE,EACX/D,QAAS6B,EACT5B,WAAYuF,EACZrF,kBAAmBA,EACnBC,kBAAmBA,EACnBC,QAASA,IAAYmD,GAErB,kBAAC,EAAD,CACEe,gBAAiBA,EACjBhB,UAAWA,EACXC,SAAUA,EACVgB,QAASA,EACTC,UAAWA,EACXC,cAAeA,EACfT,SAAUG,EACVX,QAASK,EACTzD,QAASA,EACTsE,UAAWA,EACXC,SAAUA,EACVC,iBAAkBA,EAClB9F,MAAOA,MAMfmG,EAAiBD,aAAe,CAC9BV,qBAAiBxB,EACjBQ,eAAWR,EACXS,cAAUT,EACVlD,aAASkD,EACTjD,UAAMiD,EACN2B,cAAe,kBACfT,cAAUlB,EACV5C,uBAAmB4C,EACnB3C,uBAAmB2C,EACnB4B,UAAW,UACXC,SAAU,OACVC,sBAAkB9B,EAClBhE,WAAOgE,GAmBMmC,QClGAU,EA9FH,WACV,MAAsCtF,qBAAtC,mBAAOuF,EAAP,KAAoBC,EAApB,KACA,EAA8BxF,qBAA9B,mBAAOkE,EAAP,KAAgBW,EAAhB,KACA,EAA4B7E,qBAA5B,mBAAOiC,EAAP,KAAewD,EAAf,KAEMC,EAAqBxE,uBAAY,gBAAGzC,EAAH,EAAGA,MAAH,OAAe+G,EAAe/G,KAAQ,CAAC+G,IAExE/B,EAAgBvC,uBACpB,SAAAM,GACE,IACA,EADmBA,EAAXS,QACqC,GAArCF,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAEpB6C,OAAWpC,GACXgD,EAAU,CAAE1D,aAAYC,iBAE1B,CAAC6C,EAAYY,IAGTlE,EAAcL,uBAClB,WACE2D,OAAWpC,GACXgD,OAAUhD,KAEZ,CAACoC,EAAYY,IAGTP,EAAiBhE,uBACrB,SAAAM,GACEqD,EAAWrD,EAAMI,SACjB6D,OAAUhD,KAEZ,CAACoC,EAAYY,IAGThE,EAAiBP,uBAAY,SAAAM,GAAK,OAAIwD,QAAQC,IAAR,qBAA0BzD,EAAMH,MAAQG,KAAQ,IAE5F,OACE,6BACE,+CACA,6BACE,kBAAC,EAAD,CACEyB,UAAU,oBACV1D,QAAQ,2EACRC,KAAK,QACLC,UAAWgE,EACX/D,QAAS6B,EACT5B,WAAYuF,EACZtF,WAAY6B,IAEX,gBAAGnD,EAAH,EAAGA,WAAH,OACgB,IAAfA,EAAmB,kBAAmC,IAAfA,EAAmB,cAAgB,qBAIhF,iDACA,6BACE,kBAAC,EAAD,CACE2E,UAAU,oBACVzD,KAAK,QACLC,UAAWgE,EACX/D,QAAS6B,EACT5B,WAAYuF,EACZtF,WAAY6B,IAEX,gBAAGnD,EAAH,EAAGA,WAAH,OACgB,IAAfA,EAAmB,kBAAmC,IAAfA,EAAmB,cAAgB,qBAIhF,sCACC2D,EACC,2BAAIA,EAAOD,cACTkC,GACF,2BACGA,EAAQiB,KAAI,WAA6BQ,GAA7B,IAAG5D,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAf,OACX,0BAAMK,IAAKsD,EAAOC,MAAO,CAAEC,QAAS9D,EAAa+D,KAAKC,KAAkB,EAAbhE,GAAkB,EAAI,KAC9EC,OAOT,8CACA,kBAAC,EAAD,CACEzC,QAAQ,2EACRC,KAAK,QACLmE,SAAU+B,EACVjH,MAAO8G,MCjFAS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a34a9963.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst Context = createContext({\n  abortable: false,\n  readyState: 0,\n  supported: true\n});\n\nexport default Context;\n","import { useRef } from 'react';\n\nexport default function useRefFrom(value) {\n  const ref = useRef();\n\n  ref.current = value;\n\n  return ref;\n}\n","export default function vendorPrefix(name) {\n  if (typeof window !== 'undefined') {\n    return typeof window[name] !== 'undefined' ? window[name] : window[`webkit${name}`];\n  }\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\n\nimport Context from './Context';\nimport usePrevious from './usePrevious';\nimport useRefFrom from './useRefFrom';\nimport vendorPrefix from './vendorPrefix';\n\nfunction applyAll(...fns) {\n  return function () {\n    // eslint-disable-next-line no-invalid-this, prefer-rest-params\n    fns.forEach(fn => fn.apply(this, arguments));\n  };\n}\n\nfunction recognitionAbortable(recognition) {\n  return !!(recognition && typeof recognition.abort === 'function');\n}\n\nconst Composer = ({\n  children,\n  extra,\n  grammar,\n  lang,\n  onDictate,\n  onError,\n  onProgress,\n  onRawEvent,\n  speechGrammarList,\n  speechRecognition,\n  started\n}) => {\n  const [readyState, setReadyState] = useState(0);\n  const emitDictateOnEndRef = useRef(false);\n  const extraRef = useRefFrom(extra);\n  const grammarRef = useRefFrom(grammar);\n  const langRef = useRefFrom(lang);\n  const notAllowedRef = useRef(false);\n  const onDictateRef = useRefFrom(onDictate);\n  const onErrorRef = useRefFrom(onError);\n  const onProgressRef = useRefFrom(onProgress);\n  const onRawEventRef = useRefFrom(onRawEvent);\n  const prevSpeechRecognition = usePrevious(speechRecognition);\n  const recognitionRef = useRef();\n  const speechGrammarListRef = useRefFrom(speechGrammarList);\n  const speechRecognitionRef = useRefFrom(speechRecognition);\n\n  // If \"speechRecognition\" ponyfill changed, reset the \"notAllowed\" flag.\n  if (prevSpeechRecognition !== speechRecognition) {\n    notAllowedRef.current = false;\n  }\n\n  const handleAudioEnd = useCallback(\n    ({ target }) => target === recognitionRef.current && setReadyState(3),\n    [recognitionRef, setReadyState]\n  );\n\n  const handleAudioStart = useCallback(\n    ({ target }) => {\n      if (target !== recognitionRef.current) {\n        return;\n      }\n\n      setReadyState(2);\n\n      // Web Speech API does not emit \"result\" when nothing is heard, and Chrome does not emit \"nomatch\" event.\n      // Because we emitted onProgress, we should emit \"dictate\" if not error, so they works in pair.\n      emitDictateOnEndRef.current = true;\n      onProgressRef.current && onProgressRef.current({ abortable: recognitionAbortable(target), type: 'progress' });\n    },\n    [emitDictateOnEndRef, onProgressRef, recognitionRef, setReadyState]\n  );\n\n  const handleEnd = useCallback(\n    ({ target }) => {\n      if (target !== recognitionRef.current) {\n        return;\n      }\n\n      recognitionRef.current = undefined;\n\n      setReadyState(0);\n\n      emitDictateOnEndRef.current && onDictateRef.current && onDictateRef.current({ type: 'dictate' });\n    },\n    [emitDictateOnEndRef, onDictateRef, recognitionRef, setReadyState]\n  );\n\n  const handleError = useCallback(\n    event => {\n      if (event.target !== recognitionRef.current) {\n        return;\n      }\n\n      // Error out, no need to emit \"dictate\"\n      emitDictateOnEndRef.current = false;\n      recognitionRef.current = undefined;\n\n      if (event.error === 'not-allowed') {\n        notAllowedRef.current = true;\n      }\n\n      setReadyState(0);\n\n      onErrorRef.current && onErrorRef.current(event);\n    },\n    [emitDictateOnEndRef, onErrorRef, notAllowedRef, recognitionRef, setReadyState]\n  );\n\n  const handleRawEvent = useCallback(\n    event => {\n      if (event.target !== recognitionRef.current) {\n        return;\n      }\n\n      onRawEventRef.current && onRawEventRef.current(event);\n    },\n    [onRawEventRef, recognitionRef]\n  );\n\n  const handleResult = useCallback(\n    ({ results: rawResults, target }) => {\n      if (target !== recognitionRef.current) {\n        return;\n      }\n\n      if (rawResults.length) {\n        const results = [].map.call(rawResults, alts => {\n          // Destructuring breaks Angular due to a bug in Zone.js.\n          // eslint-disable-next-line prefer-destructuring\n          const firstAlt = alts[0];\n\n          return {\n            confidence: firstAlt.confidence,\n            transcript: firstAlt.transcript\n          };\n        });\n\n        // Destructuring breaks Angular due to a bug in Zone.js.\n        // eslint-disable-next-line prefer-destructuring\n        const first = rawResults[0];\n\n        if (first.isFinal) {\n          emitDictateOnEndRef.current = false;\n          onDictateRef.current && onDictateRef.current({ result: results[0], type: 'dictate' });\n        } else {\n          onProgressRef.current &&\n            onProgressRef.current({ abortable: recognitionAbortable(target), results, type: 'progress' });\n        }\n      }\n    },\n    [emitDictateOnEndRef, onDictateRef, onProgressRef, recognitionRef]\n  );\n\n  const handleStart = useCallback(\n    ({ target }) => target === recognitionRef.current && setReadyState(1),\n    [recognitionRef, setReadyState]\n  );\n\n  useEffect(() => {\n    if (started) {\n      if (!speechRecognitionRef.current || notAllowedRef.current) {\n        throw new Error('Speech recognition is not supported');\n      }\n\n      const grammars = speechGrammarListRef.current && grammarRef.current && new speechGrammarListRef.current();\n      const recognition = (recognitionRef.current = new speechRecognitionRef.current());\n\n      if (grammars) {\n        grammars.addFromString(grammarRef.current, 1);\n\n        recognition.grammars = grammars;\n      }\n\n      recognition.lang = langRef.current;\n      recognition.interimResults = true;\n      recognition.onaudioend = applyAll(handleAudioEnd, handleRawEvent);\n      recognition.onaudiostart = applyAll(handleAudioStart, handleRawEvent);\n      recognition.onend = applyAll(handleEnd, handleRawEvent);\n      recognition.onerror = applyAll(handleError, handleRawEvent);\n      recognition.onnomatch = handleRawEvent;\n      recognition.onresult = applyAll(handleResult, handleRawEvent);\n      recognition.onsoundend = handleRawEvent;\n      recognition.onsoundstart = handleRawEvent;\n      recognition.onspeechend = handleRawEvent;\n      recognition.onspeechstart = handleRawEvent;\n      recognition.onstart = applyAll(handleStart, handleRawEvent);\n\n      const { current: extra } = extraRef;\n\n      extra &&\n        Object.entries(extra).forEach(([key, value]) => {\n          if (key !== 'constructor' && key !== 'prototype' && key !== '__proto__') {\n            recognition[key] = value;\n          }\n        });\n\n      recognition.start();\n    }\n\n    return () => {\n      const { current: recognition } = recognitionRef;\n\n      if (recognition) {\n        if (recognitionAbortable(recognition)) {\n          recognition.abort();\n        } else {\n          throw new Error('Failed to stop recognition while the current one is ongoing and is not abortable.');\n        }\n      }\n    };\n  }, [\n    extraRef,\n    grammarRef,\n    handleAudioEnd,\n    handleAudioStart,\n    handleEnd,\n    handleError,\n    handleRawEvent,\n    handleResult,\n    handleStart,\n    langRef,\n    notAllowedRef,\n    recognitionRef,\n    speechGrammarListRef,\n    speechRecognitionRef,\n    started\n  ]);\n\n  const abortable = recognitionAbortable(recognitionRef.current) && readyState === 2;\n  const supported = !!speechRecognition && !notAllowedRef.current;\n\n  const context = useMemo(\n    () => ({\n      abortable,\n      readyState,\n      supported\n    }),\n    [abortable, readyState, supported]\n  );\n\n  return (\n    <Context.Provider value={context}>\n      <Context.Consumer>{context => (typeof children === 'function' ? children(context) : children)}</Context.Consumer>\n    </Context.Provider>\n  );\n};\n\nComposer.defaultProps = {\n  children: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: navigator.mediaDevices && navigator.mediaDevices.getUserMedia && vendorPrefix('SpeechGrammarList'),\n  speechRecognition: navigator.mediaDevices && navigator.mediaDevices.getUserMedia && vendorPrefix('SpeechRecognition'),\n  started: undefined\n};\n\nComposer.propTypes = {\n  children: PropTypes.any,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any,\n  started: PropTypes.any\n};\n\nexport default Composer;\n","import { useEffect, useRef } from 'react';\n\nexport default function usePrevious(value) {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","import { useContext } from 'react';\n\nimport Context from '../../Context';\n\nexport default function useDictateContext() {\n  return useContext(Context);\n}\n","import useDictateContext from './internal/useDictateContext';\n\nexport default function useReadyState() {\n  const { readyState } = useDictateContext();\n\n  return [readyState];\n}\n","import useDictateContext from './internal/useDictateContext';\n\nexport default function useSupported() {\n  const { supported } = useDictateContext();\n\n  return [supported];\n}\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\n\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useRefFrom from './useRefFrom';\nimport useSupported from './hooks/useSupported';\n\nconst DictateButtonCore = ({ children, className, disabled, onClick }) => {\n  const [readyState] = useReadyState();\n  const [supported] = useSupported();\n\n  return (\n    <button\n      className={className}\n      disabled={readyState === 1 || readyState === 3 || !supported || disabled}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {typeof children === 'function' ? children({ readyState }) : children}\n    </button>\n  );\n};\n\nDictateButtonCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\n\nDictateButtonCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onClick: PropTypes.func.isRequired\n};\n\nconst DictateButton = ({\n  children,\n  className,\n  disabled,\n  extra,\n  grammar,\n  lang,\n  onClick,\n  onDictate,\n  onError,\n  onProgress,\n  onRawEvent,\n  speechGrammarList,\n  speechRecognition\n}) => {\n  const [started, setStarted] = useState();\n  const onClickRef = useRefFrom(onClick);\n  const onDictateRef = useRefFrom(onDictate);\n  const onErrorRef = useRefFrom(onError);\n\n  const handleClick = useCallback(\n    event => {\n      onClickRef.current && onClickRef.current(event);\n\n      !event.isDefaultPrevented() && setStarted(started => !started);\n    },\n    [onClickRef, setStarted]\n  );\n\n  const handleDictate = useCallback(\n    event => {\n      setStarted(false);\n\n      onDictateRef.current && onDictateRef.current(event);\n    },\n    [onDictateRef, setStarted]\n  );\n\n  const handleError = useCallback(\n    event => {\n      setStarted(false);\n\n      onErrorRef.current && onErrorRef.current(event);\n    },\n    [onErrorRef, setStarted]\n  );\n\n  return (\n    <Composer\n      extra={extra}\n      grammar={grammar}\n      lang={lang}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={onProgress}\n      onRawEvent={onRawEvent}\n      speechGrammarList={speechGrammarList}\n      speechRecognition={speechRecognition}\n      started={started && !disabled}\n    >\n      <DictateButtonCore className={className} disabled={disabled} onClick={handleClick}>\n        {children}\n      </DictateButtonCore>\n    </Composer>\n  );\n};\n\nDictateButton.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onClick: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\n\nDictateButton.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onClick: PropTypes.func,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\n\nexport default DictateButton;\n","/* eslint no-magic-numbers: [\"error\", { \"ignore\": [0, 1, 2, 3] }] */\n\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\n\nimport Composer from './Composer';\nimport useReadyState from './hooks/useReadyState';\nimport useSupported from './hooks/useSupported';\n\nconst DictateCheckboxCore = ({ children, className, disabled, onChange, started }) => {\n  const [readyState] = useReadyState();\n  const [supported] = useSupported();\n\n  return (\n    <label>\n      <input\n        checked={started}\n        className={className}\n        disabled={readyState === 1 || readyState === 3 || !supported || disabled}\n        onChange={onChange}\n        type=\"checkbox\"\n      />\n      {typeof children === 'function' ? children({ readyState }) : children}\n    </label>\n  );\n};\n\nDictateCheckboxCore.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined\n};\n\nDictateCheckboxCore.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  started: PropTypes.bool.isRequired\n};\n\nconst DictateCheckbox = ({\n  children,\n  className,\n  disabled,\n  extra,\n  grammar,\n  lang,\n  onDictate,\n  onError,\n  onProgress,\n  onRawEvent,\n  speechGrammarList,\n  speechRecognition\n}) => {\n  const [started, setStarted] = useState(false);\n\n  const handleChange = useCallback(\n    ({ target: { checked } }) => {\n      setStarted(checked);\n    },\n    [setStarted]\n  );\n\n  const handleDictate = useCallback(\n    event => {\n      setStarted(false);\n\n      onDictate && onDictate(event);\n    },\n    [onDictate, setStarted]\n  );\n\n  const handleError = useCallback(\n    event => {\n      setStarted(false);\n      onError && onError(event);\n    },\n    [onError, setStarted]\n  );\n\n  return (\n    <Composer\n      extra={extra}\n      grammar={grammar}\n      lang={lang}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={onProgress}\n      onRawEvent={onRawEvent}\n      speechGrammarList={speechGrammarList}\n      speechRecognition={speechRecognition}\n      started={started && !disabled}\n    >\n      <DictateCheckboxCore className={className} disabled={disabled} onChange={handleChange} started={started}>\n        {children}\n      </DictateCheckboxCore>\n    </Composer>\n  );\n};\n\nDictateCheckbox.defaultProps = {\n  children: undefined,\n  className: undefined,\n  disabled: undefined,\n  extra: undefined,\n  grammar: undefined,\n  lang: undefined,\n  onDictate: undefined,\n  onError: undefined,\n  onProgress: undefined,\n  onRawEvent: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined\n};\n\nDictateCheckbox.propTypes = {\n  children: PropTypes.any,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  extra: PropTypes.any,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  onDictate: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onRawEvent: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any\n};\n\nexport default DictateCheckbox;\n","import Composer from './Composer';\nimport Context from './Context';\nimport DictateButton from './DictateButton';\nimport DictateCheckbox from './DictateCheckbox';\nimport useAbortable from './hooks/useAbortable';\nimport useReadyState from './hooks/useReadyState';\nimport useSupported from './hooks/useSupported';\n\nexport default DictateButton;\n\nexport { Composer, Context, DictateCheckbox, useAbortable, useReadyState, useSupported };\n","import { useRef } from 'react';\n\nexport default function useRefFrom(value) {\n  const ref = useRef();\n\n  ref.current = value;\n\n  return ref;\n}\n","import { Composer, Context } from 'react-dictate-button';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useContext, useState } from 'react';\n\nimport useRefFrom from './useRefFrom';\n\nconst DictationTextBoxCore = ({\n  buttonClassName,\n  className,\n  disabled,\n  interim,\n  listening,\n  listeningText,\n  onChange,\n  onClick,\n  started,\n  startText,\n  stopText,\n  textboxClassName,\n  value\n}) => {\n  const { readyState, supported } = useContext(Context);\n\n  return (\n    <div className={className}>\n      <button\n        className={buttonClassName}\n        disabled={readyState === 1 || readyState === 3 || !supported || disabled}\n        onClick={onClick}\n      >\n        {readyState > 1 ? stopText : startText}\n      </button>\n      <input\n        className={textboxClassName}\n        onChange={onChange}\n        placeholder={started && listening ? interim || listeningText : ''}\n        readOnly={readyState !== 0}\n        type=\"text\"\n        value={(!started && value) || ''}\n      />\n    </div>\n  );\n};\n\nDictationTextBoxCore.defaultProps = {\n  buttonClassName: undefined,\n  className: undefined,\n  disabled: undefined,\n  interim: undefined,\n  listeningText: undefined,\n  startText: undefined,\n  stopText: undefined,\n  textboxClassName: undefined,\n  value: undefined\n};\n\nDictationTextBoxCore.propTypes = {\n  buttonClassName: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  interim: PropTypes.string,\n  listening: PropTypes.bool.isRequired,\n  listeningText: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  started: PropTypes.bool.isRequired,\n  startText: PropTypes.string,\n  stopText: PropTypes.string,\n  textboxClassName: PropTypes.string,\n  value: PropTypes.string\n};\n\nconst DictationTextbox = ({\n  buttonClassName,\n  className,\n  disabled,\n  grammar,\n  lang,\n  listeningText,\n  onChange,\n  onError,\n  speechGrammarList,\n  speechRecognition,\n  startText,\n  stopText,\n  textboxClassName,\n  value\n}) => {\n  const [interim, setInterim] = useState('');\n  const [listening, setListening] = useState(false);\n  const [started, setStarted] = useState(false);\n  const onChangeRef = useRefFrom(onChange);\n  const onErrorRef = useRefFrom(onError);\n\n  const handleChange = useCallback(\n    ({ target: { value } }) => onChangeRef.current && onChangeRef.current({ value }),\n    [onChangeRef]\n  );\n\n  const handleClick = useCallback(() => setStarted(started => !started), [setStarted]);\n\n  const handleDictate = useCallback(\n    ({ result }) => {\n      const { transcript: value } = result || {};\n\n      setInterim(undefined);\n      setListening(false);\n      setStarted(false);\n\n      onChangeRef.current && onChangeRef.current({ value });\n    },\n    [onChangeRef, setInterim, setListening, setStarted]\n  );\n\n  const handleError = useCallback(\n    event => {\n      console.log('error', event);\n\n      setInterim(undefined);\n      setListening(false);\n      setStarted(false);\n\n      onErrorRef.current && onErrorRef.current(event);\n    },\n    [onErrorRef, setInterim, setListening, setStarted]\n  );\n\n  const handleProgress = useCallback(\n    ({ results }) => {\n      setInterim((results || []).map(result => result.transcript.trim()).join(' '));\n      setListening(true);\n    },\n    [setInterim, setListening]\n  );\n\n  return (\n    <Composer\n      grammar={grammar}\n      lang={lang}\n      onDictate={handleDictate}\n      onError={handleError}\n      onProgress={handleProgress}\n      speechGrammarList={speechGrammarList}\n      speechRecognition={speechRecognition}\n      started={started && !disabled}\n    >\n      <DictationTextBoxCore\n        buttonClassName={buttonClassName}\n        className={className}\n        disabled={disabled}\n        interim={interim}\n        listening={listening}\n        listeningText={listeningText}\n        onChange={handleChange}\n        onClick={handleClick}\n        started={started}\n        startText={startText}\n        stopText={stopText}\n        textboxClassName={textboxClassName}\n        value={value}\n      />\n    </Composer>\n  );\n};\n\nDictationTextbox.defaultProps = {\n  buttonClassName: undefined,\n  className: undefined,\n  disabled: undefined,\n  grammar: undefined,\n  lang: undefined,\n  listeningText: 'Listening…',\n  onChange: undefined,\n  speechGrammarList: undefined,\n  speechRecognition: undefined,\n  startText: 'Dictate',\n  stopText: 'Stop',\n  textboxClassName: undefined,\n  value: undefined\n};\n\nDictationTextbox.propTypes = {\n  buttonClassName: PropTypes.string,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  grammar: PropTypes.string,\n  lang: PropTypes.string,\n  listeningText: PropTypes.string,\n  onChange: PropTypes.func,\n  speechGrammarList: PropTypes.any,\n  speechRecognition: PropTypes.any,\n  startText: PropTypes.string,\n  stopText: PropTypes.string,\n  textboxClassName: PropTypes.string,\n  value: PropTypes.string\n};\n\nexport default DictationTextbox;\n","import DictateButton, { DictateCheckbox } from 'react-dictate-button';\nimport React, { useCallback, useState } from 'react';\n\nimport DictationTextbox from './DictationTextbox';\n\nconst App = () => {\n  const [customValue, setCustomValue] = useState();\n  const [interim, setInterim] = useState();\n  const [result, setResult] = useState();\n\n  const handleCustomChange = useCallback(({ value }) => setCustomValue(value), [setCustomValue]);\n\n  const handleDictate = useCallback(\n    event => {\n      const { result } = event;\n      const { confidence, transcript } = result || {};\n\n      setInterim(undefined);\n      setResult({ confidence, transcript });\n    },\n    [setInterim, setResult]\n  );\n\n  const handleError = useCallback(\n    () => {\n      setInterim(undefined);\n      setResult(undefined);\n    },\n    [setInterim, setResult]\n  );\n\n  const handleProgress = useCallback(\n    event => {\n      setInterim(event.results);\n      setResult(undefined);\n    },\n    [setInterim, setResult]\n  );\n\n  const handleRawEvent = useCallback(event => console.log(`Raw event: ${event.type}`, event), []);\n\n  return (\n    <div>\n      <h1>&lt;DictateButton&gt;</h1>\n      <div>\n        <DictateButton\n          className=\"my-dictate-button\"\n          grammar=\"#JSGF V1.0; grammar districts; public <district> = Tuen Mun | Yuen Long;\"\n          lang=\"en-US\"\n          onDictate={handleDictate}\n          onError={handleError}\n          onProgress={handleProgress}\n          onRawEvent={handleRawEvent}\n        >\n          {({ readyState }) =>\n            readyState === 0 ? 'Start dictation' : readyState === 1 ? 'Starting...' : 'Stop dictation'\n          }\n        </DictateButton>\n      </div>\n      <h1>&lt;DictateCheckbox&gt;</h1>\n      <div>\n        <DictateCheckbox\n          className=\"my-dictate-button\"\n          lang=\"en-US\"\n          onDictate={handleDictate}\n          onError={handleError}\n          onProgress={handleProgress}\n          onRawEvent={handleRawEvent}\n        >\n          {({ readyState }) =>\n            readyState === 0 ? 'Start dictation' : readyState === 1 ? 'Starting...' : 'Stop dictation'\n          }\n        </DictateCheckbox>\n      </div>\n      <h1>Result</h1>\n      {result ? (\n        <p>{result.transcript}</p>\n      ) : interim ? (\n        <p>\n          {interim.map(({ confidence, transcript }, index) => (\n            <span key={index} style={{ opacity: confidence ? Math.ceil(confidence * 2) / 2 : 0.5 }}>\n              {transcript}\n            </span>\n          ))}\n        </p>\n      ) : (\n        false\n      )}\n      <h1>Custom textbox</h1>\n      <DictationTextbox\n        grammar=\"#JSGF V1.0; grammar districts; public <district> = Tuen Mun | Yuen Long;\"\n        lang=\"en-US\"\n        onChange={handleCustomChange}\n        value={customValue}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}